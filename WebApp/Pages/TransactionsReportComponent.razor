@page "/transactions"
@attribute [Authorize(Policy = "AdminOnly")]

@inject IJSRuntime JSRuntime
@inject IGetTransactionsUseCase GetTransactionsUseCase

<div class="row">
    <div class="col-2">
        <label for="cashier">Cashier Name</label>
        <input type="text" id="cashier" class="form-control" @bind="cashierName" />
    </div>
    <div class="col-3">
        <label for="startdate">Start Date</label>
        <input type="date" id="startDate" class="form-control" @bind="startDate" />
    </div>
    <div class="col-3">
        <label for="enddate">End Date</label>
        <input type="date" id="endDate" class="form-control" @bind="endDate" />
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="LoadTransactions">Search</button>
    </div>
    <div class="col-2">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
    </div>
</div>
<br />

@if (transactions != null)
{
    <div id="printarea">
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Cashier Name</th>
                    <th>Product Name</th>
                    <th>Quantity Before</th>
                    <th>Quantity Sold</th>
                    <th>Quantity After</th>
                    <th>Price</th>
                    <th>Sold Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in transactions)
                {
                    <tr>
                        <td>@transaction.TimeStamp.ToString("dd/MM/yyyy HH:mm:ss")</td>
                        <td>@transaction.CashierName</td>
                        <td>@transaction.ProductName</td>
                        <td>@transaction.BeforeQuantity</td>
                        <td>@transaction.SoldQuantity</td>
                        <td>@(transaction.BeforeQuantity - transaction.SoldQuantity)</td>
                        <td style="text-align:right">@(string.Format("{0:c}", transaction.Price))</td>
                        <td style="text-align:right">@(string.Format("{0:c}", transaction.SoldQuantity * transaction.Price))</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="6">&nbsp;</td>
                    <td style="text-align:right">
                        <b>
                            Grand Total:
                        </b>
                    </td>
                    <td style="text-align:right">
                        <b>
                            @(string.Format("{0:c}", @transactions.Sum(x => x.SoldQuantity * x.Price)))
                        </b>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
}
@code {

    private IEnumerable<Transaction> transactions;

    private string cashierName;
    private DateTime startDate;
    private DateTime endDate;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        startDate = DateTime.Today;
        endDate = DateTime.Today;
    }

    private void LoadTransactions()
    {
        transactions = GetTransactionsUseCase.Execute(cashierName, startDate, endDate);
    }
    private void PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");
    }
}
